{"version":3,"sources":["images/home-img.jpg","images/logo.png","components/Home/Home.js","components/Recipes/Recipe/Recipe.js","components/Spinner/Spinner.js","components/Recipes/Recipes.js","components/RecipeDetails/RecipeDetails.js","components/SearchBar/SearchBar.js","components/Header/Header.js","components/Footer/Footer.js","hoc/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","src","homeImage","alt","Recipe","props","gestalt_es","image","align","bold","size","paddingX","paddingY","title","Spinner","style","textAlign","paddingTop","Recipes","state","app_id","app_key","recipes","param","pageOfItems","onSearchChange","value","_this","setState","searchValue","onChangePage","getRecipes","url_string","window","location","href","URL","searchParams","get","api_url","axios","then","res","data","hits","this","prevProps","_this2","components_Spinner_Spinner","map","item","index","react_router_dom","key","to","Recipes_Recipe_Recipe","recipe","label","Fragment","length","JwPagination_default","items","bind","pageSize","Component","RecipeDetails","url","recipe_q","recipe_id","parseInt","ingredients","totalTime","serves","totalNutrients","yield","ingredientLines","Object","keys","key2","index_esm","color","line","nutrient","toFixed","SearchBar","setSearchValue","includes","document","querySelector","onkeydown","ele","history","push","_this3","accessibilityLabel","id","onChange","_ref","placeholder","withRouter","logo","components_SearchBar_SearchBar","Footer","Layout","components_Header_Header","children","components_Footer_Footer","App","hoc_Layout_Layout","react_router","path","exact","render","components_Home_Home","components_Recipes_Recipes","components_RecipeDetails_RecipeDetails","Boolean","hostname","match","app","src_App_0","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b53ed701.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home-img.bb2f6ab3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.f64c5586.png\";","import React from \"react\";\r\nimport homeImage from \"../../images/home-img.jpg\";\r\nimport './Home.css';\r\n\r\nconst Home = () => (\r\n  <div className=\"home\">\r\n    <h3>Get Ready for Your Fantastic Recipes? Go Search</h3>\r\n    <img src={homeImage} alt=\"homescreen\"/>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Box, Card, Text } from \"gestalt\";\r\nimport \"./Recipe.css\";\r\n\r\nconst Recipe = props => (\r\n  <div className=\"mb-4\">\r\n    <Card image={<img src={props.src} alt=\"recipe\"/>}>\r\n      <Text align=\"center\" bold size=\"xl\">\r\n        <Box paddingX={3} paddingY={2}>\r\n          {props.title}\r\n        </Box>\r\n      </Text>\r\n    </Card>\r\n  </div>\r\n);\r\n\r\nexport default Recipe;\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => (\r\n    <div style={{textAlign: \"center\", paddingTop: \"10%\"}}>\r\n        <div className=\"lds-ripple\"><div></div><div></div></div>\r\n    </div>\r\n)\r\n\r\nexport default Spinner;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Recipes.css\";\r\nimport Recipe from \"./Recipe/Recipe\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"jw-react-pagination\";\r\n\r\nclass Recipes extends Component {\r\n  state = {\r\n    app_id: \"2261a5d5\",\r\n    app_key: \"f2db99fca44e24a72d1263ecd87d7aa0\",\r\n    recipes: null,\r\n    param: \"\",\r\n    pageOfItems: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getRecipes();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    //url changed (search keywords changed)\r\n    if (prevProps !== this.props) {\r\n      this.setState({ recipes: null, pageOfItems:[] });\r\n      this.getRecipes();\r\n    }\r\n  }\r\n  onSearchChange = value => {\r\n    this.setState({ searchValue: value });\r\n  };\r\n\r\n  onChangePage = pageOfItems => {\r\n    this.setState({ pageOfItems: pageOfItems });\r\n  };\r\n\r\n  getRecipes = () => {\r\n    const url_string = window.location.href;\r\n    const url = new URL(url_string);\r\n    const param = url.searchParams.get(\"q\");\r\n    this.setState({ param: param });\r\n\r\n    const api_url =\r\n      \"https://api.edamam.com/search?q=\" +\r\n      param +\r\n      \"&app_id=\" +\r\n      this.state.app_id +\r\n      \"&app_key=\" +\r\n      this.state.app_key +\r\n      \"&from=0\" +\r\n      \"&to=100\";\r\n\r\n    axios.get(api_url).then(res => {\r\n      this.setState({ recipes: res.data.hits });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let recipes = <Spinner />;\r\n    if (this.state.pageOfItems) {\r\n      recipes = this.state.pageOfItems.map((item, index) => (\r\n        <Link\r\n          key={index}\r\n          className=\"col-12 col-sm-6 col-md-4 col-lg-3\"\r\n          to={\"/recipe?for=\" + this.state.param + \"&id=\" + index}\r\n        >\r\n          <Recipe src={item.recipe.image} title={item.recipe.label} />\r\n        </Link>\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.recipes ? (\r\n          <React.Fragment>\r\n            <p>\r\n              <strong>{this.state.recipes.length}</strong> Results found with \"{this.state.param}\"\r\n            </p>\r\n            <div className=\"pagination-container\">\r\n              <Pagination\r\n                items={this.state.recipes}\r\n                onChangePage={this.onChangePage.bind(this)}\r\n                pageSize={12}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"row\">{recipes}</div>\r\n\r\n            <div className=\"pagination-container\">\r\n              <Pagination\r\n                items={this.state.recipes}\r\n                onChangePage={this.onChangePage.bind(this)}\r\n                pageSize={12}\r\n              />\r\n            </div>\r\n          </React.Fragment>\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recipes;\r\n","import React, { Component } from \"react\";\r\nimport \"./RecipeDetails.css\";\r\nimport { Box, Text } from \"gestalt\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport { FaClock, FaHamburger } from \"react-icons/fa\";\r\n\r\nclass RecipeDetails extends Component {\r\n  state = {\r\n    app_id: \"2261a5d5\",\r\n    app_key: \"f2db99fca44e24a72d1263ecd87d7aa0\",\r\n    recipe: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const url_string = window.location.href;\r\n    const url = new URL(url_string);\r\n    const recipe_q = url.searchParams.get(\"for\");\r\n    const recipe_id = url.searchParams.get(\"id\");\r\n\r\n    const api_url =\r\n      \"https://api.edamam.com/search?q=\" +\r\n      recipe_q +\r\n      \"&app_id=\" +\r\n      this.state.app_id +\r\n      \"&app_key=\" +\r\n      this.state.app_key +\r\n      \"&from=\" +\r\n      recipe_id +\r\n      \"&to=\" +\r\n      (parseInt(recipe_id) + 1);\r\n\r\n    axios.get(api_url).then(res => {\r\n      this.setState({ recipe: res.data.hits[0].recipe });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let title = null;\r\n    let src = null;\r\n    let ingredients = null;\r\n    let totalTime = null;\r\n    let serves = null;\r\n    let totalNutrients = null;\r\n    if (this.state.recipe) {\r\n      let recipe = this.state.recipe;\r\n      title = recipe.label;\r\n      totalTime = recipe.totalTime;\r\n      serves = recipe.yield;\r\n      src = recipe.image;\r\n      ingredients = recipe.ingredientLines;\r\n      totalNutrients = recipe.totalNutrients;\r\n      totalNutrients = Object.keys(totalNutrients).map(key =>\r\n        Object.keys(totalNutrients[key]).map(key2 => totalNutrients[key][key2])\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.recipe ? (\r\n          <React.Fragment>\r\n            <Text align=\"center\" bold size=\"xl\">\r\n              <Box paddingX={3} paddingY={2}>\r\n                {title}\r\n              </Box>\r\n            </Text>\r\n\r\n            <Text bold size=\"md\">\r\n              <Box paddingX={3} paddingY={2}>\r\n                <span className=\"pr-2\">\r\n                  <FaClock style={{ color: \"#FDB813\" }} /> {totalTime} mins\r\n                </span>{\" \"}\r\n                |\r\n                <span className=\"pl-3\">\r\n                  <FaHamburger style={{ color: \"#FDB813\" }} /> {serves} serves\r\n                </span>\r\n              </Box>\r\n            </Text>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-sm-5 col-lg-4 pb-4\">\r\n                <img src={src} alt=\"recipe\" />\r\n              </div>\r\n\r\n              <div className=\"col-12 col-sm-7 col-lg-8\">\r\n                <h4>{ingredients.length} Ingredients</h4>\r\n                {ingredients ? (\r\n                  <ul>\r\n                    {ingredients.map((line, index) => (\r\n                      <li key={index}>{line}</li>\r\n                    ))}\r\n                  </ul>\r\n                ) : null}\r\n\r\n                <h4>{totalNutrients.length} Nutrients</h4>\r\n                <div className=\"row\">\r\n                  {totalNutrients.map((nutrient, index) => (\r\n                    <p key={index} className=\"col-6 col-sm-12 col-md-6\">\r\n                      <strong>{nutrient[0]}:</strong> {nutrient[1].toFixed(1)}{\" \"}\r\n                      {nutrient[2]}\r\n                    </p>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipeDetails;\r\n","import React, { Component } from \"react\";\r\nimport { SearchField } from \"gestalt\";\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    searchValue: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    //initialize value with search parameters if has any\r\n    this.setSearchValue();\r\n\r\n    //add searchbar on enter pressed event\r\n    let searchField = document.querySelector(\"#searchField\");\r\n    searchField.onkeydown = ele => {\r\n      if (ele.key === \"Enter\" && this.state.searchValue !== \"\") {\r\n        this.props.history.push(\"/search?q=\" + this.state.searchValue);\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidUpdate (prevProps) {\r\n    if (prevProps !== this.props) {\r\n      this.setSearchValue();\r\n    }\r\n  }\r\n\r\n  onSearchChange = value => {\r\n    this.setState({ searchValue: value });\r\n  };\r\n\r\n  setSearchValue = () => {\r\n    const url_string = window.location.href;\r\n    if (url_string.includes(\"/search\")) {\r\n      const url = new URL(url_string);\r\n      const param = url.searchParams.get(\"q\");\r\n      this.setState({ searchValue: param });\r\n    }else {\r\n      this.setState({searchValue: \"\"});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pl-5 pr-5 pb-5 search-bar-container\">\r\n        <SearchField\r\n          accessibilityLabel=\"Search Field\"\r\n          id=\"searchField\"\r\n          onChange={({ value }) => this.onSearchChange(value)}\r\n          placeholder=\"Search your Recipes\"\r\n          value={this.state.searchValue}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport logo from \"../../images/logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = props => (\r\n  <header>\r\n    <Link to=\"/\">\r\n      <img className=\"logo\" src={logo} alt=\"logo\"/>\r\n    </Link>\r\n    <SearchBar {...props} />\r\n  </header>\r\n);\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\n\r\nconst Footer = () => (\r\n    <footer>\r\n        <p>Images design from <a href=\"https://www.freepik.com/\"><strong>freepik</strong></a></p>\r\n    </footer>\r\n)\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport './Layout.css'\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\n\r\nconst Layout = props => (\r\n  <React.Fragment>\r\n    <Header />\r\n    <div className=\"container\">{props.children}</div>\r\n    <Footer />\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Home from './components/Home/Home';\nimport Recipes from \"./components/Recipes/Recipes\";\nimport RecipeDetails from \"./components/RecipeDetails/RecipeDetails\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport { Route, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <Switch>\n        <Route path=\"/\" exact render={props => <Home />} />\n          <Route path=\"/search\" render={props => <Recipes {...props} />} />\n          <Route path=\"/recipe\" render={() => <RecipeDetails />} />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"gestalt/dist/gestalt.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst app = (\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n)\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}